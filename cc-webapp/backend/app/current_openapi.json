{
  "openapi": "3.1.0",
  "info": {
    "title": "Casino-Club F2P API",
    "description": "Backend API for Casino-Club F2P gaming platform",
    "version": "1.0.0"
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Register user (temporary minimal endpoint)",
        "description": "Lightweight register endpoint added for interim E2E tests.\nUses AuthService.register_with_invite_code if available; falls back to legacy user creation otherwise.",
        "operationId": "minimal_register_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/_RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_RegisterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Get current user profile (temporary minimal endpoint)",
        "operationId": "minimal_profile_api_auth_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__auth__UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/debug/token": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Debug Token",
        "description": "DEV: Return basic info about the provided bearer token (no verification).",
        "operationId": "debug_token_api_auth_debug_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/debug/decode": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Debug Decode",
        "description": "DEV: Decode JWT header/payload without signature verification for debugging.",
        "operationId": "debug_decode_api_auth_debug_decode_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/debug/sig": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Debug Signature",
        "description": "DEV: Verify HS256 signature manually using current SECRET_KEY.",
        "operationId": "debug_signature_api_auth_debug_sig_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/debug/make": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Debug Make Token",
        "description": "DEV: Create a token for the first user and return it along with secret length.",
        "operationId": "debug_make_token_api_auth_debug_make_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/debug/sig-guess": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Debug Signature Guess",
        "description": "DEV: Try signature verification with multiple candidate secrets to find a match.",
        "operationId": "debug_signature_guess_api_auth_debug_sig_guess_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/debug/verify": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Debug Verify",
        "description": "DEV: Attempt full verify_token and return result or error details.",
        "operationId": "debug_verify_api_auth_debug_verify_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Signup",
        "operationId": "signup_api_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/admin/login": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Admin Login",
        "operationId": "admin_login_api_auth_admin_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Refresh",
        "operationId": "refresh_api_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_refresh_api_auth_refresh_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Logout",
        "operationId": "logout_api_auth_logout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/RefreshTokenRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/logout-all": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Logout All",
        "operationId": "logout_all_api_auth_logout_all_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Me",
        "description": "Alias to current user profile for clients expecting /api/auth/me.",
        "operationId": "me_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__auth__UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Profile",
        "description": "현재 로그인한 사용자 프로필 조회",
        "operationId": "get_profile_api_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Profile",
        "description": "Update user profile",
        "operationId": "update_user_profile_api_users_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/balance": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Balance",
        "description": "사용자 잔액 조회 - 전역동기화 핵심 엔드포인트",
        "operationId": "get_user_balance_api_users_balance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Info",
        "description": "사용자 상세 정보 조회",
        "operationId": "get_user_info_api_users_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/stats": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Stats",
        "description": "Get user statistics",
        "operationId": "get_user_stats_api_users_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/tokens/add": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add Tokens",
        "description": "Add tokens to user account (admin or special purposes)",
        "operationId": "add_tokens_api_users_tokens_add_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Amount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "특정 사용자 정보 조회 (본인=전체, 타인=제한적 정보)",
        "operationId": "get_user_api_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/app__schemas__user__UserResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PublicUserResponse"
                    }
                  ],
                  "title": "Response Get User Api Users  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/email/trigger": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Email Trigger",
        "operationId": "admin_email_trigger_api_admin_email_trigger_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminEmailTriggerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin List Users",
        "operationId": "admin_list_users_api_admin_users_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSummary"
                  },
                  "title": "Response Admin List Users Api Admin Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Create User",
        "description": "Create a new user (admin only)",
        "operationId": "admin_create_user_api_admin_users_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin User Detail",
        "operationId": "admin_user_detail_api_admin_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Update User",
        "description": "Update core user admin fields (admin only).\n\nThis endpoint exists to satisfy tests expecting PUT /api/admin/users/{id}\nto control is_admin/is_active/user_rank with proper permission checks.",
        "operationId": "admin_update_user_api_admin_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Delete User",
        "operationId": "admin_delete_user_api_admin_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/elevate": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Dev Elevate User",
        "description": "Dev-only: elevate a user by site_id to admin without auth.\n\nThis is used only in tests to enable admin flows.",
        "operationId": "dev_elevate_user_api_admin_users_elevate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElevateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/rank": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Update Rank",
        "operationId": "admin_update_rank_api_admin_users__user_id__rank_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRankRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/status": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Update Status",
        "operationId": "admin_update_status_api_admin_users__user_id__status_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/logs": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin User Logs",
        "operationId": "admin_user_logs_api_admin_users__user_id__logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminLogResponse"
                  },
                  "title": "Response Admin User Logs Api Admin Users  User Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/audit/logs": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "List Audit Logs",
        "operationId": "list_audit_logs_api_admin_audit_logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action"
            }
          },
          {
            "name": "target_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Type"
            }
          },
          {
            "name": "target_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Id"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Until"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/audit/logs.csv": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Export Audit Logs Csv",
        "operationId": "export_audit_logs_csv_api_admin_audit_logs_csv_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action"
            }
          },
          {
            "name": "target_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Type"
            }
          },
          {
            "name": "target_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Target Id"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Until"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/items": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin List Items",
        "operationId": "admin_list_items_api_admin_shop_items_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Create Item",
        "operationId": "admin_create_item_api_admin_shop_items_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCatalogItemIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/shop/items/{item_id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Update Item",
        "operationId": "admin_update_item_api_admin_shop_items__item_id__put",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCatalogItemIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Delete Item",
        "operationId": "admin_delete_item_api_admin_shop_items__item_id__delete",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/items/{item_id}/discount": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Set Discount",
        "operationId": "admin_set_discount_api_admin_shop_items__item_id__discount_patch",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminDiscountPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/items/{item_id}/rank": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Set Rank",
        "operationId": "admin_set_rank_api_admin_shop_items__item_id__rank_patch",
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminRankPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/stats": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Admin Stats",
        "description": "확장 관리자 통계 반환 (Redis 5s 캐시).\n\n캐시 키: admin:stats:cache:v1\n실패 시 안전하게 빈 기본값 반환.",
        "operationId": "get_admin_stats_api_admin_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/users/{user_id}/ban": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Ban User",
        "description": "Ban a user",
        "operationId": "ban_user_api_admin_users__user_id__ban_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/unban": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Unban User",
        "description": "Unban a user",
        "operationId": "unban_user_api_admin_users__user_id__unban_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{user_id}/tokens/add": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add User Tokens",
        "description": "Add tokens to a user account (admin only).\n- 호환성: JSON 본문({amount, reason}) 또는 쿼리 파라미터 amount 모두 지원",
        "operationId": "add_user_tokens_api_admin_users__user_id__tokens_add_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Amount"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/AdminAddTokensRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/limited/toggle": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Toggle",
        "operationId": "admin_limited_toggle_api_admin_limited_toggle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedToggleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/gacha/config": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Update Gacha Config",
        "operationId": "admin_update_gacha_config_api_admin_gacha_config_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GachaConfigUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/campaigns": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create Campaign",
        "operationId": "create_campaign_api_admin_campaigns_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/campaigns/{campaign_id}/cancel": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Cancel Campaign",
        "operationId": "cancel_campaign_api_admin_campaigns__campaign_id__cancel_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/transactions": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin List Transactions",
        "operationId": "admin_list_transactions_api_admin_transactions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/transactions/{receipt}/force-settle": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Force Settle",
        "operationId": "admin_force_settle_api_admin_transactions__receipt__force_settle_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Receipt"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForceSettleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/limited-packages/upsert": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Upsert",
        "operationId": "admin_limited_upsert_api_admin_limited_packages_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedUpsertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/limited-packages/{package_id}/disable": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Disable",
        "operationId": "admin_limited_disable_api_admin_limited_packages__package_id__disable_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "package_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Package Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/promo-codes/upsert": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Promo Upsert",
        "operationId": "admin_promo_upsert_api_admin_promo_codes_upsert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoCodeUpsertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/limited/period": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Period",
        "operationId": "admin_limited_period_api_admin_limited_period_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedPeriodRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/limited/stock": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Stock",
        "operationId": "admin_limited_stock_api_admin_limited_stock_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedStockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/limited/per-user-limit": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Per User Limit",
        "operationId": "admin_limited_per_user_limit_api_admin_limited_per_user_limit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedPerUserLimitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/limited/promo/set": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Promo Set",
        "operationId": "admin_limited_promo_set_api_admin_limited_promo_set_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedPromoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/limited/promo/clear": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Limited Promo Clear",
        "operationId": "admin_limited_promo_clear_api_admin_limited_promo_clear_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedPromoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/users/{user_id}/gold/grant": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "관리자 골드 지급",
        "operationId": "admin_grant_gold_api_admin_users__user_id__gold_grant_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoldGrantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoldGrantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/products": {
      "get": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Get Shop Products",
        "description": "상점 상품 목록 조회 (관리자 전용)",
        "operationId": "get_shop_products_api_admin_shop_products_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "건너뛸 상품 수",
              "default": 0,
              "title": "Skip"
            },
            "description": "건너뛸 상품 수"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "조회할 상품 수",
              "default": 50,
              "title": "Limit"
            },
            "description": "조회할 상품 수"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "상품명 검색",
              "title": "Search"
            },
            "description": "상품명 검색"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "활성 상태 필터",
              "title": "Is Active"
            },
            "description": "활성 상태 필터"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Create Shop Product",
        "description": "새 상품 생성 (관리자 전용)",
        "operationId": "create_shop_product_api_admin_shop_products_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Product Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/products/{product_id}": {
      "get": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Get Shop Product",
        "description": "특정 상품 상세 조회 (관리자 전용)",
        "operationId": "get_shop_product_api_admin_shop_products__product_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Update Shop Product",
        "description": "기존 상품 수정 (관리자 전용)",
        "operationId": "update_shop_product_api_admin_shop_products__product_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Product Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Delete Shop Product",
        "description": "상품 삭제 (소프트 삭제)",
        "operationId": "delete_shop_product_api_admin_shop_products__product_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/products/{product_id}/activate": {
      "post": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Activate Product",
        "description": "상품 활성화",
        "operationId": "activate_product_api_admin_shop_products__product_id__activate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/products/{product_id}/deactivate": {
      "post": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Deactivate Product",
        "description": "상품 비활성화",
        "operationId": "deactivate_product_api_admin_shop_products__product_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/shop/categories": {
      "get": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Get Product Categories",
        "description": "상품 카테고리 목록 조회",
        "operationId": "get_product_categories_api_admin_shop_categories_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/shop/stats": {
      "get": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Get Shop Stats",
        "description": "상점 통계 조회",
        "operationId": "get_shop_stats_api_admin_shop_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/shop/existing-products": {
      "get": {
        "tags": [
          "admin-shop"
        ],
        "summary": "Get Existing Products Info",
        "description": "기존 상품 정보 조회 (보존 확인용)",
        "operationId": "get_existing_products_info_api_admin_shop_existing_products_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/olap/health": {
      "get": {
        "summary": "Olap Health",
        "operationId": "olap_health_api_olap_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/actions": {
      "post": {
        "tags": [
          "Game Actions",
          "Game Actions"
        ],
        "summary": "Log Action",
        "operationId": "log_action_api_actions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionLoggedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/bulk": {
      "post": {
        "tags": [
          "Game Actions",
          "Game Actions"
        ],
        "summary": "Log Actions Bulk",
        "operationId": "log_actions_bulk_api_actions_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkActions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Log Actions Bulk Api Actions Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/recent/{user_id}": {
      "get": {
        "tags": [
          "Game Actions",
          "Game Actions"
        ],
        "summary": "Recent Actions",
        "operationId": "recent_actions_api_actions_recent__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionItem"
                  },
                  "title": "Response Recent Actions Api Actions Recent  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rewards/users/{user_id}/rewards": {
      "get": {
        "tags": [
          "Rewards",
          "Rewards",
          "Rewards"
        ],
        "summary": "Get User Rewards",
        "description": "Retrieves a paginated list of rewards for a specific user.",
        "operationId": "get_user_rewards_api_rewards_users__user_id__rewards_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "The ID of the user to get rewards for"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number, 1-indexed",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number, 1-indexed"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRewardsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rewards/distribute": {
      "post": {
        "tags": [
          "Rewards",
          "Rewards",
          "Rewards"
        ],
        "summary": "Distribute Reward To User",
        "description": "Distributes a specific reward to a user.\nThis is the central endpoint for granting rewards from games or events.",
        "operationId": "distribute_reward_to_user_api_rewards_distribute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardDistributionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/catalog": {
      "get": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "List shop catalog (gold)",
        "operationId": "list_catalog_api_shop_catalog_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CatalogItem"
                  },
                  "type": "array",
                  "title": "Response List Catalog Api Shop Catalog Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/products": {
      "get": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "List shop products from database",
        "description": "List active shop products from shop_products table",
        "operationId": "list_shop_products_api_shop_products_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShopProductOut"
                  },
                  "type": "array",
                  "title": "Response List Shop Products Api Shop Products Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/admin/products": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Admin Create Product",
        "operationId": "admin_create_product_api_shop_admin_products_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopProductCreate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "List products (soft delete aware)",
        "operationId": "admin_list_products_api_shop_admin_products_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/admin/products/{product_id}": {
      "put": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Admin Update Product",
        "operationId": "admin_update_product_api_shop_admin_products__product_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Admin Soft Delete Product",
        "operationId": "admin_soft_delete_product_api_shop_admin_products__product_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/admin/products/{product_id}/restore": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Admin Restore Product",
        "operationId": "admin_restore_product_api_shop_admin_products__product_id__restore_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/limited-packages": {
      "get": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "List active limited packages (gold)",
        "operationId": "list_limited_packages_api_shop_limited_packages_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LimitedPackageOut"
                  },
                  "type": "array",
                  "title": "Response List Limited Packages Api Shop Limited Packages Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/limited/catalog": {
      "get": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "List limited packages (compat)",
        "operationId": "list_limited_catalog_api_shop_limited_catalog_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LimitedPackageOut"
                  },
                  "type": "array",
                  "title": "Response List Limited Catalog Api Shop Limited Catalog Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/limited/buy": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Buy limited-time package (compat)",
        "operationId": "compat_buy_limited_package_legacy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyLimitedBuyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitedBuyReceipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/webhook/payment": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Payment Webhook (Replay & 멱등 보호)",
        "description": "결제 프로바이더 웹훅 수신.\n보안 계층:\n  1) HMAC 서명 검증 (X-Signature)\n  2) 재생(Replay) 방어: X-Timestamp + X-Nonce (서로 결합한 키 Redis SETNX, 시간왜곡 허용 ±300s)\n  3) 이벤트 멱등: X-Event-Id 헤더 또는 payload.event_id 기준 Redis SETNX (중복시 duplicate 응답)\n\n기대 헤더:\n  - X-Signature: sha256=<hex>\n  - X-Timestamp: unix epoch seconds\n  - X-Nonce: 임의 UUID/난수 문자열\n  - (선택) X-Event-Id: 공급자 이벤트 고유 ID",
        "operationId": "payment_webhook_api_shop_webhook_payment_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/shop/purchase": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Purchase Item",
        "description": "Purchase shop item using user's gold tokens",
        "operationId": "purchase_shop_item_api_shop_purchase_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopPurchaseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopPurchaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/buy": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Buy gold top-up or items",
        "operationId": "buy_api_shop_buy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyReceipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/shop/transactions": {
      "get": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "List My Transactions",
        "operationId": "list_my_transactions_api_shop_transactions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/transactions/{receipt}/settle": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Settle My Transaction",
        "operationId": "settle_my_transaction_api_shop_transactions__receipt__settle_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "receipt",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Receipt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/shop/buy-limited": {
      "post": {
        "tags": [
          "Shop",
          "Shop"
        ],
        "summary": "Buy limited-time package (real money)",
        "operationId": "buy_limited_package",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitedBuyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitedBuyReceipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/missions/": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get User Missions",
        "description": "Get the list of active missions and the current user's progress.",
        "operationId": "get_user_missions_api_missions__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/missions/{mission_id}/claim": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Claim Mission Reward",
        "description": "Claim the reward for a completed mission.",
        "operationId": "claim_mission_reward_api_missions__mission_id__claim_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/main": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Main Dashboard",
        "description": "Get main dashboard statistics.",
        "operationId": "get_main_dashboard_api_dashboard_main_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dashboard/games": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Games Dashboard",
        "description": "Get game-specific dashboard statistics.",
        "operationId": "get_games_dashboard_api_dashboard_games_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dashboard/social-proof": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Social Proof",
        "description": "Get statistics for social proof widgets.\nThis endpoint is not protected by admin auth to be publicly available.",
        "operationId": "get_social_proof_api_dashboard_social_proof_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Unified dashboard aggregate",
        "description": "통합 대시보드 집계 엔드포인트\n\n기존 개별 엔드포인트(/dashboard/main, /dashboard/games, /dashboard/social-proof)를 한 번에 호출해\n프론트 초기 로딩 RTT를 줄이고 일관된 스냅샷을 제공한다.\n\nResponse 예시:\n{\n  \"main\": {...},\n  \"games\": {...},\n  \"social_proof\": {...},\n  \"_meta\": {\"generated_at\": \"2025-08-21T12:34:56Z\"}\n}",
        "operationId": "get_unified_dashboard_api_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Unified Dashboard Api Dashboard Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/streak/status": {
      "get": {
        "tags": [
          "Streaks"
        ],
        "summary": "Status",
        "operationId": "status_api_streak_status_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SLOT_SPIN",
              "title": "Action Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreakStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/streak/tick": {
      "post": {
        "tags": [
          "Streaks"
        ],
        "summary": "Tick",
        "operationId": "tick_api_streak_tick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TickRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreakStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/streak/reset": {
      "post": {
        "tags": [
          "Streaks"
        ],
        "summary": "Reset",
        "operationId": "reset_api_streak_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/streak/history": {
      "get": {
        "tags": [
          "Streaks"
        ],
        "summary": "History",
        "operationId": "history_api_streak_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SLOT_SPIN",
              "title": "Action Type"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 2100,
              "minimum": 1970,
              "title": "Year"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 12,
              "minimum": 1,
              "title": "Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceHistory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/streak/protection": {
      "get": {
        "tags": [
          "Streaks"
        ],
        "summary": "Protection Status",
        "operationId": "protection_status_api_streak_protection_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SLOT_SPIN",
              "title": "Action Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectionStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Streaks"
        ],
        "summary": "Set Protection",
        "operationId": "set_protection_api_streak_protection_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectionStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/streak/preview": {
      "get": {
        "tags": [
          "Streaks"
        ],
        "summary": "Preview",
        "description": "현재 streak 및 오늘/내일 보상 금액 미리보기 제공.\n\n프론트는 이 엔드포인트를 사용해 클라이언트 산식 중복 제거.\n- streak_count: Redis 카운터 (증가 없이 조회)\n- claimed_today: 동일 UTC day idempotency key 존재 여부\n- claimable: streak_count>0 이고 claimed_today False\n- today_reward: streak_count 기반 산식\n- next_day_reward: streak_count+1 기반 산식",
        "operationId": "preview_api_streak_preview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "SLOT_SPIN",
              "title": "Action Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreakPreviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/streak/claim": {
      "post": {
        "tags": [
          "Streaks"
        ],
        "summary": "Claim",
        "operationId": "claim_api_streak_claim_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/ClaimRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreakClaimResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/vip/status": {
      "get": {
        "tags": [
          "VIP"
        ],
        "summary": "Vip Status",
        "operationId": "vip_status_api_vip_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VipStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/vip/claim": {
      "post": {
        "tags": [
          "VIP"
        ],
        "summary": "Claim Vip Daily",
        "operationId": "claim_vip_daily_api_vip_claim_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VipClaimResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/notification/settings/anon": {
      "get": {
        "tags": [
          "Notification Center",
          "Notification Center"
        ],
        "summary": "Get Notification Settings Anon",
        "description": "Return default notification settings; include user_id when available.\n\nThis endpoint intentionally allows anonymous requests and will not trigger\nthe global HTTPBearer auto_error behavior.",
        "operationId": "get_notification_settings_anon_api_notification_settings_anon_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Notification Settings Anon Api Notification Settings Anon Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/events": {
      "get": {
        "tags": [
          "Admin Content"
        ],
        "summary": "List Events",
        "operationId": "list_events_api_admin_content_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/app__routers__admin_content__EventResponse"
                  },
                  "type": "array",
                  "title": "Response List Events Api Admin Content Events Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_admin_content_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routers__admin_content__EventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routers__admin_content__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/content/events/{event_id}": {
      "get": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Get Event",
        "operationId": "get_event_api_admin_content_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routers__admin_content__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Update Event",
        "operationId": "update_event_api_admin_content_events__event_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__routers__admin_content__EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__routers__admin_content__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Delete Event",
        "operationId": "delete_event_api_admin_content_events__event_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/events/{event_id}/activate": {
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Activate Event",
        "operationId": "activate_event_api_admin_content_events__event_id__activate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/events/{event_id}/deactivate": {
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Deactivate Event",
        "operationId": "deactivate_event_api_admin_content_events__event_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/missions/templates": {
      "get": {
        "tags": [
          "Admin Content"
        ],
        "summary": "List Mission Templates",
        "operationId": "list_mission_templates_api_admin_content_missions_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MissionTemplateResponse"
                  },
                  "type": "array",
                  "title": "Response List Mission Templates Api Admin Content Missions Templates Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Create Mission Template",
        "operationId": "create_mission_template_api_admin_content_missions_templates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MissionTemplateCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/content/missions/templates/{template_id}": {
      "put": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Update Mission Template",
        "operationId": "update_mission_template_api_admin_content_missions_templates__template_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MissionTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Delete Mission Template",
        "operationId": "delete_mission_template_api_admin_content_missions_templates__template_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/rewards/catalog": {
      "get": {
        "tags": [
          "Admin Content"
        ],
        "summary": "List Reward Catalog",
        "operationId": "list_reward_catalog_api_admin_content_rewards_catalog_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RewardCatalogItem"
                  },
                  "type": "array",
                  "title": "Response List Reward Catalog Api Admin Content Rewards Catalog Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Create Reward Catalog",
        "operationId": "create_reward_catalog_api_admin_content_rewards_catalog_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardCatalogCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCatalogItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/admin/content/rewards/catalog/{reward_id}": {
      "put": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Update Reward Catalog",
        "operationId": "update_reward_catalog_api_admin_content_rewards_catalog__reward_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reward Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardCatalogUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCatalogItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Delete Reward Catalog",
        "operationId": "delete_reward_catalog_api_admin_content_rewards_catalog__reward_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reward Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/rewards/catalog/{reward_id}/activate": {
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Activate Reward",
        "operationId": "activate_reward_api_admin_content_rewards_catalog__reward_id__activate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reward Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/rewards/catalog/{reward_id}/deactivate": {
      "post": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Deactivate Reward",
        "operationId": "deactivate_reward_api_admin_content_rewards_catalog__reward_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "reward_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Reward Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/content/rewards/audit": {
      "get": {
        "tags": [
          "Admin Content"
        ],
        "summary": "Reward Audit",
        "operationId": "reward_audit_api_admin_content_rewards_audit_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Id"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardAuditResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/": {
      "post": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_admin_events__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__event_schemas__EventCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin Events"
        ],
        "summary": "List Events",
        "operationId": "list_events_api_admin_events__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                  },
                  "title": "Response List Events Api Admin Events  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/{event_id}": {
      "put": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Update Event",
        "operationId": "update_event_api_admin_events__event_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__event_schemas__EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/{event_id}/deactivate": {
      "post": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Deactivate Event",
        "operationId": "deactivate_event_api_admin_events__event_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/{event_id}/participations": {
      "get": {
        "tags": [
          "Admin Events"
        ],
        "summary": "List Participations",
        "operationId": "list_participations_api_admin_events__event_id__participations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "completed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completed"
            }
          },
          {
            "name": "claimed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claimed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventParticipationResponse"
                  },
                  "title": "Response List Participations Api Admin Events  Event Id  Participations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/{event_id}/force-claim/{user_id}": {
      "post": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Force Claim",
        "operationId": "force_claim_api_admin_events__event_id__force_claim__user_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRewardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/events/seed/model-index": {
      "post": {
        "tags": [
          "Admin Events"
        ],
        "summary": "Seed Model Index Event",
        "operationId": "seed_model_index_event_api_admin_events_seed_model_index_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/doc-titles/docs/titles": {
      "get": {
        "tags": [
          "Document Titles",
          "Document Titles"
        ],
        "summary": "Get Docs Titles",
        "description": "Return document names and their H1-H3 titles from the docs folder.",
        "operationId": "get_docs_titles_api_doc_titles_docs_titles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response Get Docs Titles Api Doc Titles Docs Titles Get"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/emotion_based": {
      "post": {
        "tags": [
          "Feedback",
          "Feedback"
        ],
        "summary": "Get Personalized Emotion-Based Feedback",
        "operationId": "get_emotion_based_feedback_endpoint_feedback_emotion_based_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmotionFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FeedbackResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Emotion Based Feedback Endpoint Feedback Emotion Based Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/generate": {
      "post": {
        "tags": [
          "Feedback",
          "Feedback"
        ],
        "summary": "Generate Feedback",
        "description": "Generate emotion-based feedback for user\n\nArgs:\n    request: Feedback request data\n        - user_id: User ID\n        - emotion: Emotion state\n        - segment: User segment\n        - context: Additional context information\n\nReturns:\n    Feedback response object",
        "operationId": "generate_feedback_feedback_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/achievements": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "List Achievements",
        "operationId": "list_achievements_api_games_achievements_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementProgressResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/achievements/my": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "My Achievements",
        "operationId": "my_achievements_api_games_achievements_my_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementProgressResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/stats/basic": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Basic Stats",
        "operationId": "get_basic_stats_api_games_stats_basic_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type"
            }
          },
          {
            "name": "user_scope",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "True=자신의 통계, False=전체(관리자 필요)",
              "default": true,
              "title": "User Scope"
            },
            "description": "True=자신의 통계, False=전체(관리자 필요)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameBasicStatsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/session/start": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Start Game Session",
        "operationId": "start_game_session_api_games_session_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameSessionStart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSessionStartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/stats/recalculate/{user_id}": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Recalc User Game Stats",
        "description": "Recalculate authoritative aggregated stats for a user (crash only MVP).",
        "operationId": "recalc_user_game_stats_api_games_stats_recalculate__user_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/session/end": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "End Game Session",
        "operationId": "end_game_session_api_games_session_end_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameSessionEnd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSessionEndResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/session/active": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Active Session",
        "operationId": "get_active_session_api_games_session_active_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/gacha/config": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Gacha Config",
        "operationId": "get_gacha_config_api_games_gacha_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/gacha/stats": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Gacha Stats",
        "operationId": "get_gacha_stats_api_games_gacha_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Games List",
        "description": "게임 목록 조회 (직접 JSON 반환)",
        "operationId": "get_games_list_api_games__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/slot/spin": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Spin Slot",
        "description": "슬롯머신 스핀",
        "operationId": "spin_slot_api_games_slot_spin_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotSpinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotSpinResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/rps/play": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Play Rps",
        "description": "가위바위보 플레이",
        "operationId": "play_rps_api_games_rps_play_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RPSPlayRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RPSPlayResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/gacha/pull": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Pull Gacha",
        "description": "가챠 뽑기 (서비스 레이어 위임: 피티, 근접실패, 10연 할인 적용)",
        "operationId": "pull_gacha_api_games_gacha_pull_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GachaPullRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GachaPullResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/crash/bet": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Place Crash Bet",
        "description": "크래시 게임 베팅 (단일 요청 내 시뮬레이션) \n개선 사항:\n- 사용자 잔액 차감/승리 가산 단일 트랜잭션 처리\n- 동시 중복 제출 방지용 행 잠금(SELECT ... FOR UPDATE) 기반 멱등 (초간단)\n- broadcast 에 status 추가 (placed|auto_cashed)\n- potential_win 과 별도로 simulated_max_win 제공 (auto_cashout 미지정 시 혼동 제거)",
        "operationId": "place_crash_bet_api_games_crash_bet_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrashBetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrashBetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/crash/cashout": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Cashout Crash Bet",
        "description": "크래시 게임 수동 캐시아웃\n- 진행 중인 게임에서 사용자가 원하는 시점에 캐시아웃\n- Redis 또는 DB에서 게임 세션 상태 확인",
        "operationId": "cashout_crash_bet_api_games_crash_cashout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrashCashoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrashCashoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/stats/me": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get My Authoritative Game Stats",
        "description": "현재 로그인 사용자에 대한 서버 권위 게임 통계 (Crash + 슬롯 + 가챠 + RPS 통합).\n\nuser_game_stats 테이블 (Crash 전용) + user_actions 테이블 (슬롯/가챠/RPS 등) 통합 조회.",
        "operationId": "get_my_authoritative_game_stats_api_games_stats_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/stats/{user_id}": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Game Stats",
        "description": "사용자 전체 게임 통계 (슬롯/룰렛/가챠 등)",
        "operationId": "get_game_stats_api_games_stats__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/profile/{user_id}/stats": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Profile Game Stats",
        "description": "프로필용 상세 게임 통계",
        "operationId": "get_profile_game_stats_api_games_profile__user_id__stats_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileGameStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/leaderboard": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Game Leaderboard",
        "description": "게임별 또는 전체 리더보드",
        "operationId": "get_game_leaderboard_api_games_leaderboard_get",
        "parameters": [
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameLeaderboard"
                  },
                  "title": "Response Get Game Leaderboard Api Games Leaderboard Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/achievements/{user_id}": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get User Achievements",
        "description": "사용자 업적 목록 (기본 예시)",
        "operationId": "get_user_achievements_api_games_achievements__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Achievement"
                  },
                  "title": "Response Get User Achievements Api Games Achievements  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/history": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Game History",
        "description": "현재 사용자 GameHistory 조회\n\n필터:\n  - game_type, action_type (정확 일치)\n  - since (ISO8601 문자열) 이후\n페이지네이션:\n  - limit / offset\n정렬: 최신(created_at desc)",
        "operationId": "get_game_history_api_games_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Type"
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action Type"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Since"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameHistoryListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/{game_type}/stats": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Game Type Stats",
        "operationId": "get_game_type_stats_api_games__game_type__stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "game_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameTypeStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/profile/stats": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get Profile Stats",
        "operationId": "get_profile_stats_api_games_profile_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileAggregateStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/games/follow/{target_user_id}": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Follow User",
        "operationId": "follow_user_api_games_follow__target_user_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowActionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Games"
        ],
        "summary": "Unfollow User",
        "operationId": "unfollow_user_api_games_follow__target_user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowActionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/follow/list": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "List Following",
        "operationId": "list_following_api_games_follow_list_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/follow/followers": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "List Followers",
        "operationId": "list_followers_api_games_follow_followers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/generate": {
      "post": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Create Invite Code",
        "description": "Generate a new invite code\nOnly admin users can generate invite codes",
        "operationId": "create_invite_code_api_invite_generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "expires_in_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30,
              "title": "Expires In Days"
            }
          },
          {
            "name": "max_uses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Max Uses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/validate": {
      "post": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Validate Invite Code",
        "description": "Validate an invite code\nReturns validation status and code details",
        "operationId": "validate_invite_code_api_invite_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateInviteCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateInviteCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/codes": {
      "get": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "List Invite Codes",
        "description": "List all invite codes created by the current user\nAdmin users can see all codes",
        "operationId": "list_invite_codes_api_invite_codes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/InviteCodeResponse"
                  },
                  "type": "array",
                  "title": "Response List Invite Codes Api Invite Codes Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/invite/codes/{code}/deactivate": {
      "patch": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Deactivate Invite Code",
        "description": "Deactivate an invite code\nOnly the creator or admin can deactivate",
        "operationId": "deactivate_invite_code_api_invite_codes__code__deactivate_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/invite/stats": {
      "get": {
        "tags": [
          "Invite Codes"
        ],
        "summary": "Get Invite Stats",
        "description": "Get invite code statistics\nShows usage metrics for the current user's codes",
        "operationId": "get_invite_stats_api_invite_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/rbac/premium": {
      "get": {
        "tags": [
          "RBAC Demo"
        ],
        "summary": "Premium Only",
        "operationId": "premium_only_api_rbac_premium_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/rbac/vip": {
      "get": {
        "tags": [
          "RBAC Demo"
        ],
        "summary": "Vip Only",
        "operationId": "vip_only_api_rbac_vip_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/metrics/global": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "글로벌 플랫폼 메트릭 조회",
        "operationId": "get_global_metrics_api_metrics_global_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalMetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/metrics/stream": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "글로벌 메트릭 SSE 스트림",
        "description": "Server-Sent Events (text/event-stream)\n\n- interval: seconds between emissions (min 2 / max 30 enforced)\n- event: \"metrics\"",
        "operationId": "stream_global_metrics_api_metrics_stream_get",
        "parameters": [
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Interval"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Active Events",
        "description": "활성 이벤트 목록 조회",
        "operationId": "events_list_active",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                  },
                  "type": "array",
                  "title": "Response Events List Active"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/admin": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Admin Create Event",
        "operationId": "events_admin_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAdminCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/admin/list": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Admin List Events",
        "operationId": "events_admin_list",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Deleted"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                  },
                  "title": "Response Events Admin List"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/admin/{event_id}": {
      "put": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Admin Update Event",
        "operationId": "events_admin_update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAdminUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Admin Soft Delete Event",
        "operationId": "events_admin_soft_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/admin/{event_id}/restore": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Admin Restore Event",
        "operationId": "events_admin_restore",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{event_id}": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Event Detail",
        "description": "이벤트 상세 조회",
        "operationId": "events_get_detail",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/join": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Join Event",
        "description": "이벤트 참여",
        "operationId": "events_join",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/progress/{event_id}": {
      "put": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Update Event Progress",
        "description": "이벤트 진행 상황 업데이트",
        "operationId": "events_progress_update",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventProgressUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/claim/{event_id}": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Claim Event Rewards",
        "description": "이벤트 보상 수령",
        "operationId": "events_claim",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRewardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/missions/daily": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Daily Missions",
        "description": "일일 미션 목록 조회",
        "operationId": "missions_list_daily",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMissionResponse"
                  },
                  "type": "array",
                  "title": "Response Missions List Daily"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/weekly": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get Weekly Missions",
        "description": "주간 미션 목록 조회",
        "operationId": "missions_list_weekly",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMissionResponse"
                  },
                  "type": "array",
                  "title": "Response Missions List Weekly"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/all": {
      "get": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Get All Missions",
        "description": "모든 미션 목록 조회",
        "operationId": "missions_list_all",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMissionResponse"
                  },
                  "type": "array",
                  "title": "Response Missions List All"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/progress": {
      "put": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Update Mission Progress",
        "description": "미션 진행 상황 업데이트",
        "operationId": "missions_progress_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMissionProgress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Missions Progress Update"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/events/missions/claim/{mission_id}": {
      "post": {
        "tags": [
          "Events & Missions"
        ],
        "summary": "Claim Mission Rewards",
        "description": "미션 보상 수령",
        "operationId": "missions_claim",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRewardResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/realtime/test/broadcast": {
      "get": {
        "tags": [
          "Realtime Sync"
        ],
        "summary": "Test Broadcast",
        "description": "테스트용 브로드캐스트 (관리자만)",
        "operationId": "test_broadcast_api_realtime_test_broadcast_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "test",
              "title": "Event Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/kafka/_debug/last": {
      "get": {
        "tags": [
          "Kafka"
        ],
        "summary": "Kafka Last Messages",
        "description": "Return last consumed Kafka messages (debug).",
        "operationId": "kafka_last_messages_api_kafka__debug_last_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/kafka/_debug/ready": {
      "get": {
        "tags": [
          "Kafka"
        ],
        "summary": "Kafka Ready",
        "description": "Return whether the Kafka consumer is initialized and assigned partitions.",
        "operationId": "kafka_ready_api_kafka__debug_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "tags": [
          "API Info"
        ],
        "summary": "Api Info",
        "description": "API information endpoint",
        "operationId": "api_info_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Achievement": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "badge_icon": {
            "type": "string",
            "title": "Badge Icon"
          },
          "badge_color": {
            "type": "string",
            "title": "Badge Color"
          },
          "achieved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Achieved At"
          },
          "progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "badge_icon",
          "badge_color"
        ],
        "title": "Achievement",
        "description": "사용자 업적"
      },
      "AchievementProgressItem": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "badge_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Badge Color"
          },
          "reward_coins": {
            "type": "integer",
            "title": "Reward Coins"
          },
          "reward_gold": {
            "type": "integer",
            "title": "Reward Gold"
          },
          "progress": {
            "type": "integer",
            "title": "Progress"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          },
          "unlocked": {
            "type": "boolean",
            "title": "Unlocked"
          }
        },
        "type": "object",
        "required": [
          "code",
          "title",
          "description",
          "icon",
          "badge_color",
          "reward_coins",
          "reward_gold",
          "progress",
          "threshold",
          "unlocked"
        ],
        "title": "AchievementProgressItem"
      },
      "AchievementProgressResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AchievementProgressItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "AchievementProgressResponse"
      },
      "ActionCreate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type",
            "examples": [
              "SLOT_SPIN",
              "GACHA_SPIN",
              "LOGIN",
              "REWARD_GRANT"
            ]
          },
          "context": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          },
          "client_ts": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Ts"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "action_type"
        ],
        "title": "ActionCreate"
      },
      "ActionItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "action_data": {
            "type": "object",
            "title": "Action Data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "action_type",
          "created_at",
          "action_data"
        ],
        "title": "ActionItem"
      },
      "ActionLoggedResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "action_type",
          "created_at"
        ],
        "title": "ActionLoggedResponse"
      },
      "AdminAddTokensRequest": {
        "properties": {
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "amount"
        ],
        "title": "AdminAddTokensRequest"
      },
      "AdminCatalogItemIn": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Product ID"
          },
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "price_cents": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Price Cents"
          },
          "gold": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Gold",
            "description": "Amount of gold granted (legacy alias: gems)"
          },
          "discount_percent": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Discount Percent",
            "default": 0
          },
          "discount_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Ends At"
          },
          "min_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rank"
          }
        },
        "type": "object",
        "required": [
          "id",
          "sku",
          "name",
          "price_cents",
          "gold"
        ],
        "title": "AdminCatalogItemIn"
      },
      "AdminDiscountPatch": {
        "properties": {
          "discount_percent": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Discount Percent"
          },
          "discount_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Ends At"
          }
        },
        "type": "object",
        "required": [
          "discount_percent"
        ],
        "title": "AdminDiscountPatch"
      },
      "AdminEmailTriggerRequest": {
        "properties": {
          "template": {
            "type": "string",
            "title": "Template"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "site_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Site Id"
          },
          "segment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment"
          },
          "context": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "template"
        ],
        "title": "AdminEmailTriggerRequest",
        "description": "관리자 전용 템플릿 이메일 발송 트리거\n\n- 대상 단일 계정: user_id 또는 site_id 지정\n- 대상 세그먼트: segment 지정 (UserSegment.rfm_group 라벨)\n- template: email_templates.py에 정의된 키 (welcome|reward|event 등)\n- context: 템플릿 렌더링에 사용될 추가 값 (부족하면 서버에서 기본값 보충)"
      },
      "AdminLogResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "action_type",
          "created_at"
        ],
        "title": "AdminLogResponse"
      },
      "AdminLogin": {
        "properties": {
          "site_id": {
            "type": "string",
            "title": "Site Id",
            "description": "관리자 사이트 아이디"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "관리자 비밀번호"
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "password"
        ],
        "title": "AdminLogin",
        "description": "관리자 로그인 스키마",
        "example": {
          "password": "admin123",
          "site_id": "admin"
        }
      },
      "AdminRankPatch": {
        "properties": {
          "min_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rank"
          }
        },
        "type": "object",
        "title": "AdminRankPatch"
      },
      "AdminStatsResponse": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "active_users": {
            "type": "integer",
            "title": "Active Users"
          },
          "total_games_played": {
            "type": "integer",
            "title": "Total Games Played"
          },
          "total_tokens_in_circulation": {
            "type": "integer",
            "title": "Total Tokens In Circulation"
          },
          "online_users": {
            "type": "integer",
            "title": "Online Users",
            "default": 0
          },
          "total_revenue": {
            "type": "integer",
            "title": "Total Revenue",
            "default": 0
          },
          "today_revenue": {
            "type": "integer",
            "title": "Today Revenue",
            "default": 0
          },
          "critical_alerts": {
            "type": "integer",
            "title": "Critical Alerts",
            "default": 0
          },
          "pending_actions": {
            "type": "integer",
            "title": "Pending Actions",
            "default": 0
          },
          "generated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "active_users",
          "total_games_played",
          "total_tokens_in_circulation"
        ],
        "title": "AdminStatsResponse",
        "description": "Admin statistics response (확장)\n\n필드 설명:\n    - total_users: 전체 가입 사용자 수\n    - active_users: is_active = true 사용자 수\n    - total_games_played: UserAction 총 레코드 수 (임시 지표)\n    - total_tokens_in_circulation: users.cyber_token_balance 총합\n    - online_users: 최근 5분 내 활동 세션 사용자 수\n    - total_revenue: 누적 성공 거래 금액 (amount 단위 그대로)\n    - today_revenue: 금일 00:00 이후 성공 거래 금액\n    - critical_alerts: 최근 10분 내 주요 경보성 action 카운트\n    - pending_actions: pending 상태 거래 수\n    - generated_at: 서버 생성 시각 ISO8601"
      },
      "AdminUserCreateRequest": {
        "properties": {
          "site_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Site Id",
            "description": "사이트 아이디"
          },
          "nickname": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Nickname",
            "description": "닉네임"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "전화번호",
            "default": "01000000000"
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "title": "Password",
            "description": "비밀번호"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "description": "관리자 권한",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "활성 상태",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "nickname",
          "password"
        ],
        "title": "AdminUserCreateRequest",
        "description": "Admin user creation request"
      },
      "AdminUserCreateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "is_admin",
          "is_active",
          "created_at"
        ],
        "title": "AdminUserCreateResponse",
        "description": "Admin user creation response"
      },
      "AdminUserUpdateRequest": {
        "properties": {
          "is_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Admin"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "user_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Rank"
          }
        },
        "type": "object",
        "title": "AdminUserUpdateRequest",
        "description": "Generic admin user update request.\n\nAllows toggling is_admin, is_active and updating user_rank in one call."
      },
      "AttendanceHistory": {
        "properties": {
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "month": {
            "type": "integer",
            "title": "Month"
          },
          "days": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "action_type",
          "year",
          "month",
          "days"
        ],
        "title": "AttendanceHistory"
      },
      "Body_refresh_api_auth_refresh_post": {
        "properties": {
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "title": "Body_refresh_api_auth_refresh_post"
      },
      "BulkActions": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ActionCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "BulkActions"
      },
      "BuyReceipt": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "product_id": {
            "type": "string",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "gold_granted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gold Granted"
          },
          "gold_spent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gold Spent"
          },
          "new_gold_balance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Gold Balance"
          },
          "charge_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Charge Id"
          },
          "receipt_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Receipt Code"
          },
          "item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Item Id"
          },
          "item_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Item Name"
          },
          "reason_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason Code"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "user_id",
          "product_id",
          "quantity"
        ],
        "title": "BuyReceipt"
      },
      "BuyRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "product_id": {
            "type": "string",
            "title": "Product Id",
            "description": "Catalog product id or item code"
          },
          "amount": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount",
            "description": "Amount in cents or tokens depending on kind"
          },
          "quantity": {
            "type": "integer",
            "maximum": 99.0,
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          },
          "kind": {
            "type": "string",
            "enum": [
              "gold",
              "item"
            ],
            "title": "Kind",
            "default": "gold"
          },
          "payment_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method",
            "description": "card|tokens etc"
          },
          "item_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Item Name"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "card_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Card Token"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "Client-provided idempotency key (unique per purchase attempt)"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "product_id"
        ],
        "title": "BuyRequest"
      },
      "CampaignCreateRequest": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "targeting_type": {
            "type": "string",
            "pattern": "^(all|segment|user_ids)$",
            "title": "Targeting Type",
            "default": "all"
          },
          "target_segment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Segment"
          },
          "user_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ids"
          },
          "scheduled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "message"
        ],
        "title": "CampaignCreateRequest"
      },
      "CatalogItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "price_cents": {
            "type": "integer",
            "title": "Price Cents"
          },
          "discounted_price_cents": {
            "type": "integer",
            "title": "Discounted Price Cents"
          },
          "gold": {
            "type": "integer",
            "title": "Gold"
          },
          "discount_percent": {
            "type": "integer",
            "title": "Discount Percent",
            "default": 0
          },
          "discount_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Ends At"
          },
          "min_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rank"
          }
        },
        "type": "object",
        "required": [
          "id",
          "sku",
          "name",
          "price_cents",
          "discounted_price_cents",
          "gold"
        ],
        "title": "CatalogItem"
      },
      "ClaimRequest": {
        "properties": {
          "action_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Type"
          }
        },
        "type": "object",
        "title": "ClaimRequest"
      },
      "ClaimRewardResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "progress_version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress Version"
          },
          "reward_items": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reward Items"
          },
          "new_balance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Balance"
          }
        },
        "type": "object",
        "required": [
          "success",
          "rewards",
          "message"
        ],
        "title": "ClaimRewardResponse"
      },
      "CrashBetRequest": {
        "properties": {
          "bet_amount": {
            "type": "integer",
            "title": "Bet Amount"
          },
          "auto_cashout_multiplier": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Cashout Multiplier"
          }
        },
        "type": "object",
        "required": [
          "bet_amount"
        ],
        "title": "CrashBetRequest",
        "description": "크래시 게임 베팅 요청 모델"
      },
      "CrashBetResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "game_id": {
            "type": "string",
            "title": "Game Id"
          },
          "bet_amount": {
            "type": "integer",
            "title": "Bet Amount"
          },
          "potential_win": {
            "type": "integer",
            "title": "Potential Win"
          },
          "max_multiplier": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Multiplier"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "베팅 직후 상태 placed|auto_cashed|active 등"
          },
          "simulated_max_win": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Simulated Max Win",
            "description": "UI 표시용 – 현재 multiplier 기반 가상의 최대 승리금 (auto_cashout 미지정 시 안내)"
          }
        },
        "type": "object",
        "required": [
          "success",
          "game_id",
          "bet_amount",
          "potential_win",
          "message",
          "balance"
        ],
        "title": "CrashBetResponse",
        "description": "크래시 게임 베팅 응답 모델"
      },
      "CrashCashoutRequest": {
        "properties": {
          "game_id": {
            "type": "string",
            "title": "Game Id"
          },
          "multiplier": {
            "type": "number",
            "title": "Multiplier"
          }
        },
        "type": "object",
        "required": [
          "game_id",
          "multiplier"
        ],
        "title": "CrashCashoutRequest",
        "description": "크래시 게임 수동 캐시아웃 요청 모델"
      },
      "CrashCashoutResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "game_id": {
            "type": "string",
            "title": "Game Id"
          },
          "cashout_multiplier": {
            "type": "number",
            "title": "Cashout Multiplier"
          },
          "win_amount": {
            "type": "integer",
            "title": "Win Amount"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "game_id",
          "cashout_multiplier",
          "win_amount",
          "balance",
          "message"
        ],
        "title": "CrashCashoutResponse",
        "description": "크래시 게임 수동 캐시아웃 응답 모델"
      },
      "ElevateRequest": {
        "properties": {
          "site_id": {
            "type": "string",
            "title": "Site Id"
          }
        },
        "type": "object",
        "required": [
          "site_id"
        ],
        "title": "ElevateRequest"
      },
      "EmotionFeedbackRequest": {
        "properties": {
          "emotion_result_data": {
            "type": "object",
            "title": "Emotion Result Data",
            "description": "EmotionResult as dict."
          },
          "user_segment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Segment",
            "default": "GENERAL"
          },
          "mission_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mission Type",
            "default": "GENERAL"
          },
          "context_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Text"
          }
        },
        "type": "object",
        "required": [
          "emotion_result_data"
        ],
        "title": "EmotionFeedbackRequest"
      },
      "EventAdminCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "title",
          "event_type",
          "start_date",
          "end_date",
          "rewards"
        ],
        "title": "EventAdminCreate"
      },
      "EventAdminUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "rewards": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "EventAdminUpdate"
      },
      "EventJoin": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "event_id"
        ],
        "title": "EventJoin"
      },
      "EventParticipationResponse": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "progress": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress",
            "default": {}
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed"
          },
          "claimed_rewards": {
            "type": "boolean",
            "title": "Claimed Rewards"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "event": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/app__schemas__event_schemas__EventResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "id",
          "user_id",
          "completed",
          "claimed_rewards",
          "joined_at"
        ],
        "title": "EventParticipationResponse"
      },
      "EventProgressUpdate": {
        "properties": {
          "progress": {
            "type": "object",
            "title": "Progress"
          }
        },
        "type": "object",
        "required": [
          "progress"
        ],
        "title": "EventProgressUpdate"
      },
      "FeedbackResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "animation_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Animation Key"
          },
          "sound_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sound Key"
          },
          "intensity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intensity"
          },
          "color_scheme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Scheme"
          },
          "bonus_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bonus Tokens"
          },
          "recommendation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recommendation"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "FeedbackResponse"
      },
      "FollowActionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "following": {
            "type": "boolean",
            "title": "Following"
          },
          "target_user_id": {
            "type": "integer",
            "title": "Target User Id"
          },
          "follower_count": {
            "type": "integer",
            "title": "Follower Count"
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count"
          }
        },
        "type": "object",
        "required": [
          "success",
          "following",
          "target_user_id",
          "follower_count",
          "following_count"
        ],
        "title": "FollowActionResponse"
      },
      "FollowListItem": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "followed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Followed At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "nickname",
          "followed_at"
        ],
        "title": "FollowListItem"
      },
      "FollowListResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FollowListItem"
            },
            "type": "array",
            "title": "Items"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items"
        ],
        "title": "FollowListResponse"
      },
      "ForceSettleRequest": {
        "properties": {
          "outcome": {
            "type": "string",
            "pattern": "^(success|failed)$",
            "title": "Outcome",
            "default": "success"
          }
        },
        "type": "object",
        "title": "ForceSettleRequest"
      },
      "GachaConfigUpdate": {
        "properties": {
          "rarity_table": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rarity Table"
          },
          "reward_pool": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reward Pool"
          }
        },
        "type": "object",
        "title": "GachaConfigUpdate"
      },
      "GachaPullRequest": {
        "properties": {
          "gacha_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gacha Id"
          },
          "pull_count": {
            "type": "integer",
            "title": "Pull Count",
            "default": 1
          },
          "use_premium_currency": {
            "type": "boolean",
            "title": "Use Premium Currency",
            "default": false
          }
        },
        "type": "object",
        "title": "GachaPullRequest",
        "description": "가챠 뽑기 요청 모델",
        "example": {
          "pull_count": 10,
          "use_premium_currency": false
        }
      },
      "GachaPullResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "items": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          },
          "rare_item_count": {
            "type": "integer",
            "title": "Rare Item Count",
            "default": 0
          },
          "ultra_rare_item_count": {
            "type": "integer",
            "title": "Ultra Rare Item Count",
            "default": 0
          },
          "pull_count": {
            "type": "integer",
            "title": "Pull Count"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "special_animation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Animation"
          },
          "animation_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Animation Type",
            "description": "애니메이션 타입: normal|epic|legendary|near_miss|pity"
          },
          "psychological_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Psychological Message",
            "description": "즉시 피드백용 메시지"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          },
          "currency_balance": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Currency Balance"
          },
          "net_change": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Net Change",
            "description": "토큰 순 변화량 (뽑기 비용 합산 반영)"
          }
        },
        "type": "object",
        "required": [
          "success",
          "items",
          "pull_count",
          "balance",
          "message",
          "currency_balance"
        ],
        "title": "GachaPullResponse",
        "description": "가챠 뽑기 응답 모델",
        "example": {
          "animation_type": "near_miss",
          "balance": 12345,
          "currency_balance": {
            "gems": 0,
            "tokens": 11895
          },
          "items": [
            {
              "name": "Neon Chip",
              "rarity": "common"
            },
            {
              "name": "Cyber Ring",
              "rarity": "rare"
            },
            {
              "name": "Blade of Flux",
              "rarity": "epic"
            }
          ],
          "message": "Gacha pull completed",
          "psychological_message": "거의 다 왔어요! 한 번만 더 도전해보세요!",
          "pull_count": 10,
          "rare_item_count": 1,
          "success": true,
          "ultra_rare_item_count": 1
        }
      },
      "GameBasicStatsItem": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "total_hands": {
            "type": "integer",
            "title": "Total Hands"
          },
          "wins": {
            "type": "integer",
            "title": "Wins"
          },
          "win_rate": {
            "type": "number",
            "title": "Win Rate"
          },
          "total_bet": {
            "type": "integer",
            "title": "Total Bet"
          },
          "total_win": {
            "type": "integer",
            "title": "Total Win"
          },
          "net": {
            "type": "integer",
            "title": "Net"
          },
          "roi": {
            "type": "number",
            "title": "Roi"
          }
        },
        "type": "object",
        "required": [
          "game_type",
          "total_hands",
          "wins",
          "win_rate",
          "total_bet",
          "total_win",
          "net",
          "roi"
        ],
        "title": "GameBasicStatsItem"
      },
      "GameBasicStatsResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GameBasicStatsItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "GameBasicStatsResponse"
      },
      "GameHistoryItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "delta_coin": {
            "type": "integer",
            "title": "Delta Coin"
          },
          "delta_gem": {
            "type": "integer",
            "title": "Delta Gem"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "result_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Meta"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "game_type",
          "action_type",
          "delta_coin",
          "delta_gem",
          "created_at"
        ],
        "title": "GameHistoryItem"
      },
      "GameHistoryListResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/GameHistoryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items",
          "limit",
          "offset"
        ],
        "title": "GameHistoryListResponse"
      },
      "GameLeaderboard": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "period": {
            "type": "string",
            "title": "Period"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/LeaderboardEntry"
            },
            "type": "array",
            "title": "Entries",
            "default": []
          },
          "user_rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Rank"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "game_type",
          "period",
          "updated_at"
        ],
        "title": "GameLeaderboard",
        "description": "게임 리더보드 응답"
      },
      "GameSession": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "current_bet": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Bet",
            "default": 0
          },
          "current_round": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Round",
            "default": 0
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "active"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "user_id",
          "game_type",
          "start_time"
        ],
        "title": "GameSession",
        "description": "게임 세션 모델"
      },
      "GameSessionEnd": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "duration": {
            "type": "integer",
            "title": "Duration"
          },
          "rounds_played": {
            "type": "integer",
            "title": "Rounds Played",
            "default": 1
          },
          "total_bet": {
            "type": "integer",
            "title": "Total Bet",
            "default": 0
          },
          "total_win": {
            "type": "integer",
            "title": "Total Win",
            "default": 0
          },
          "game_result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Result"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "duration"
        ],
        "title": "GameSessionEnd",
        "description": "게임 세션 종료 요청 모델"
      },
      "GameSessionEndResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "total_bet": {
            "type": "integer",
            "title": "Total Bet"
          },
          "total_win": {
            "type": "integer",
            "title": "Total Win"
          },
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "result_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "status",
          "duration",
          "total_bet",
          "total_win",
          "game_type"
        ],
        "title": "GameSessionEndResponse"
      },
      "GameSessionStart": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "bet_amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bet Amount",
            "default": 0
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "game_type"
        ],
        "title": "GameSessionStart",
        "description": "게임 세션 시작 요청 모델"
      },
      "GameSessionStartResponse": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "bet_amount": {
            "type": "integer",
            "title": "Bet Amount"
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "status",
          "started_at",
          "game_type",
          "bet_amount"
        ],
        "title": "GameSessionStartResponse"
      },
      "GameStats": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "total_spins": {
            "type": "integer",
            "title": "Total Spins",
            "default": 0
          },
          "total_coins_won": {
            "type": "integer",
            "title": "Total Coins Won",
            "default": 0
          },
          "total_gems_won": {
            "type": "integer",
            "title": "Total Gems Won",
            "default": 0
          },
          "special_items_won": {
            "type": "integer",
            "title": "Special Items Won",
            "default": 0
          },
          "jackpots_won": {
            "type": "integer",
            "title": "Jackpots Won",
            "default": 0
          },
          "bonus_spins_won": {
            "type": "integer",
            "title": "Bonus Spins Won",
            "default": 0
          },
          "best_streak": {
            "type": "integer",
            "title": "Best Streak",
            "default": 0
          },
          "current_streak": {
            "type": "integer",
            "title": "Current Streak",
            "default": 0
          },
          "last_spin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Spin Date"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "GameStats",
        "description": "사용자 게임 통계 모델"
      },
      "GameTypeStats": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "play_count": {
            "type": "integer",
            "title": "Play Count"
          },
          "net_coin": {
            "type": "integer",
            "title": "Net Coin"
          },
          "net_gem": {
            "type": "integer",
            "title": "Net Gem"
          },
          "wins": {
            "type": "integer",
            "title": "Wins"
          },
          "losses": {
            "type": "integer",
            "title": "Losses"
          },
          "last_played_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Played At"
          }
        },
        "type": "object",
        "required": [
          "game_type",
          "play_count",
          "net_coin",
          "net_gem",
          "wins",
          "losses",
          "last_played_at"
        ],
        "title": "GameTypeStats"
      },
      "GlobalMetricsResponse": {
        "properties": {
          "online_users": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Online Users"
          },
          "spins_last_hour": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Spins Last Hour"
          },
          "big_wins_last_hour": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Big Wins Last Hour"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "type": "object",
        "required": [
          "online_users",
          "spins_last_hour",
          "big_wins_last_hour",
          "generated_at"
        ],
        "title": "GlobalMetricsResponse"
      },
      "GoldGrantRequest": {
        "properties": {
          "amount": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Amount",
            "description": "지급할 골드 양 (양수)"
          },
          "reason": {
            "type": "string",
            "maxLength": 120,
            "minLength": 2,
            "title": "Reason"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "멱등 보장을 위한 클라이언트 키"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "reason"
        ],
        "title": "GoldGrantRequest"
      },
      "GoldGrantResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "granted": {
            "type": "integer",
            "title": "Granted"
          },
          "new_gold_balance": {
            "type": "integer",
            "title": "New Gold Balance"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "receipt_code": {
            "type": "string",
            "title": "Receipt Code"
          },
          "idempotent_reuse": {
            "type": "boolean",
            "title": "Idempotent Reuse",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "success",
          "user_id",
          "granted",
          "new_gold_balance",
          "reason",
          "receipt_code"
        ],
        "title": "GoldGrantResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "redis_connected": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redis Connected",
            "description": "Redis 연결 성공 여부 (lifespan 초기화 시 설정). 테스트 및 관측 목적."
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "version"
        ],
        "title": "HealthResponse"
      },
      "InviteCodeResponse": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "max_uses": {
            "type": "integer",
            "title": "Max Uses",
            "default": 1
          },
          "used_count": {
            "type": "integer",
            "title": "Used Count",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "code",
          "created_at"
        ],
        "title": "InviteCodeResponse"
      },
      "LeaderboardEntry": {
        "properties": {
          "rank": {
            "type": "integer",
            "title": "Rank"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "score": {
            "type": "integer",
            "title": "Score"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "rank",
          "user_id",
          "nickname",
          "score"
        ],
        "title": "LeaderboardEntry",
        "description": "리더보드 항목"
      },
      "LegacyLimitedBuyRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "quantity": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "card_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Card Token"
          },
          "promo_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promo Code"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "Client-provided idempotency key (unique per purchase attempt)"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "code"
        ],
        "title": "LegacyLimitedBuyRequest"
      },
      "LimitedBuyCompatRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "Limited package code"
          },
          "quantity": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "card_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Card Token"
          },
          "promo_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promo Code"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "Client-provided idempotency key"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "code"
        ],
        "title": "LimitedBuyCompatRequest"
      },
      "LimitedBuyReceipt": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "total_price_cents": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Price Cents"
          },
          "gold_granted": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gold Granted"
          },
          "new_gold_balance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Gold Balance"
          },
          "charge_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Charge Id"
          },
          "receipt_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Receipt Code"
          },
          "reason_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason Code",
            "description": "실패 사유 코드 (OUT_OF_STOCK, USER_LIMIT 등)"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "LimitedBuyReceipt"
      },
      "LimitedBuyRequest": {
        "properties": {
          "package_id": {
            "type": "string",
            "title": "Package Id",
            "description": "Limited package id/code"
          },
          "quantity": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Quantity",
            "default": 1
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "card_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Card Token"
          },
          "promo_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promo Code",
            "description": "Optional promotion code for discount"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "Client-provided idempotency key (unique per purchase attempt)"
          }
        },
        "type": "object",
        "required": [
          "package_id"
        ],
        "title": "LimitedBuyRequest"
      },
      "LimitedPackageOut": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "package_id": {
            "type": "string",
            "title": "Package Id",
            "description": "Legacy alias; always equals code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price_cents": {
            "type": "integer",
            "title": "Price Cents"
          },
          "gold": {
            "type": "integer",
            "title": "Gold",
            "description": "구매 시 부여되는 골드 양 (이전 gems 필드 대체)",
            "default": 0
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "title": "Start At"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "title": "End At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "per_user_limit": {
            "type": "integer",
            "title": "Per User Limit",
            "default": 1
          },
          "remaining_stock": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remaining Stock",
            "description": "None means unlimited"
          },
          "user_purchased": {
            "type": "integer",
            "title": "User Purchased",
            "default": 0
          },
          "user_remaining": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Remaining"
          }
        },
        "type": "object",
        "required": [
          "code",
          "package_id",
          "name",
          "price_cents",
          "start_at",
          "end_at",
          "is_active"
        ],
        "title": "LimitedPackageOut"
      },
      "LimitedPerUserLimitRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "per_user_limit": {
            "type": "integer",
            "title": "Per User Limit"
          }
        },
        "type": "object",
        "required": [
          "code",
          "per_user_limit"
        ],
        "title": "LimitedPerUserLimitRequest"
      },
      "LimitedPeriodRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "title": "Start At"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "title": "End At"
          }
        },
        "type": "object",
        "required": [
          "code",
          "start_at",
          "end_at"
        ],
        "title": "LimitedPeriodRequest"
      },
      "LimitedPromoRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "promo_code": {
            "type": "string",
            "title": "Promo Code"
          },
          "cents_off": {
            "type": "integer",
            "title": "Cents Off"
          }
        },
        "type": "object",
        "required": [
          "code",
          "promo_code",
          "cents_off"
        ],
        "title": "LimitedPromoRequest"
      },
      "LimitedStockRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "initial_stock": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initial Stock"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "LimitedStockRequest"
      },
      "LimitedToggleRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          }
        },
        "type": "object",
        "required": [
          "code",
          "active"
        ],
        "title": "LimitedToggleRequest"
      },
      "LimitedUpsertRequest": {
        "properties": {
          "package_id": {
            "type": "string",
            "title": "Package Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "starts_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Starts At"
          },
          "ends_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ends At"
          },
          "stock_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stock Total"
          },
          "stock_remaining": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stock Remaining"
          },
          "per_user_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Per User Limit"
          },
          "emergency_disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emergency Disabled"
          },
          "contents": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contents"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "gold": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gold",
            "description": "Amount of gold granted (legacy bonus_tokens alias)"
          }
        },
        "type": "object",
        "required": [
          "package_id",
          "name",
          "price"
        ],
        "title": "LimitedUpsertRequest"
      },
      "MissionResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "mission_type": {
            "type": "string",
            "title": "Mission Type"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "target_value": {
            "type": "integer",
            "title": "Target Value"
          },
          "target_type": {
            "type": "string",
            "title": "Target Type"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "reset_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reset Period"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_progress": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Progress"
          }
        },
        "type": "object",
        "required": [
          "title",
          "mission_type",
          "target_value",
          "target_type",
          "rewards",
          "id",
          "is_active",
          "sort_order",
          "created_at"
        ],
        "title": "MissionResponse"
      },
      "MissionTemplateCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "mission_type": {
            "type": "string",
            "pattern": "^(daily|weekly|event)$",
            "title": "Mission Type"
          },
          "target": {
            "type": "integer",
            "title": "Target",
            "default": 1
          },
          "reward": {
            "type": "object",
            "title": "Reward"
          }
        },
        "type": "object",
        "required": [
          "title",
          "mission_type"
        ],
        "title": "MissionTemplateCreate"
      },
      "MissionTemplateResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "mission_type": {
            "type": "string",
            "pattern": "^(daily|weekly|event)$",
            "title": "Mission Type"
          },
          "target": {
            "type": "integer",
            "title": "Target",
            "default": 1
          },
          "reward": {
            "type": "object",
            "title": "Reward"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "mission_type",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "MissionTemplateResponse"
      },
      "MissionTemplateUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "mission_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(daily|weekly|event)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mission Type"
          },
          "target": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target"
          },
          "reward": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reward"
          }
        },
        "type": "object",
        "title": "MissionTemplateUpdate"
      },
      "PaginatedRewardsResponse": {
        "properties": {
          "rewards": {
            "items": {
              "$ref": "#/components/schemas/RewardItem"
            },
            "type": "array",
            "title": "Rewards"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total_rewards": {
            "type": "integer",
            "title": "Total Rewards"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          }
        },
        "type": "object",
        "required": [
          "rewards",
          "page",
          "page_size",
          "total_rewards",
          "total_pages"
        ],
        "title": "PaginatedRewardsResponse"
      },
      "ProfileAggregateStats": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "total_play_count": {
            "type": "integer",
            "title": "Total Play Count"
          },
          "total_net_coin": {
            "type": "integer",
            "title": "Total Net Coin"
          },
          "total_net_gem": {
            "type": "integer",
            "title": "Total Net Gem"
          },
          "distinct_game_types": {
            "type": "integer",
            "title": "Distinct Game Types"
          },
          "favorite_game_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favorite Game Type"
          },
          "recent_game_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recent Game Types"
          },
          "last_played_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Played At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "total_play_count",
          "total_net_coin",
          "total_net_gem",
          "distinct_game_types",
          "favorite_game_type",
          "recent_game_types",
          "last_played_at"
        ],
        "title": "ProfileAggregateStats"
      },
      "ProfileGameStats": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "total_games_played": {
            "type": "integer",
            "title": "Total Games Played",
            "default": 0
          },
          "total_time_played": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Time Played"
          },
          "favorite_game": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favorite Game"
          },
          "recent_activities": {
            "items": {
              "$ref": "#/components/schemas/UserGameActivity"
            },
            "type": "array",
            "title": "Recent Activities",
            "default": []
          },
          "achievements": {
            "items": {
              "$ref": "#/components/schemas/Achievement"
            },
            "type": "array",
            "title": "Achievements",
            "default": []
          },
          "current_session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GameSession"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ProfileGameStats",
        "description": "프로필 게임 통계 응답"
      },
      "PromoCodeUpsertRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "package_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Package Id"
          },
          "discount_type": {
            "type": "string",
            "title": "Discount Type",
            "default": "flat"
          },
          "value": {
            "type": "integer",
            "title": "Value",
            "default": 0
          },
          "starts_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Starts At"
          },
          "ends_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ends At"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "max_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Uses"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "PromoCodeUpsertRequest"
      },
      "ProtectionRequest": {
        "properties": {
          "action_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Type"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "ProtectionRequest"
      },
      "ProtectionStatus": {
        "properties": {
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          }
        },
        "type": "object",
        "required": [
          "action_type",
          "enabled"
        ],
        "title": "ProtectionStatus"
      },
      "PublicUserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "default": "hidden"
          },
          "cyber_token_balance": {
            "type": "integer",
            "title": "Cyber Token Balance",
            "default": 0
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          },
          "rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank",
            "default": "STANDARD"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname"
        ],
        "title": "PublicUserResponse",
        "description": "타인 보기용 제한 정보 스키마"
      },
      "RPSPlayRequest": {
        "properties": {
          "choice": {
            "type": "string",
            "title": "Choice"
          },
          "bet_amount": {
            "type": "integer",
            "title": "Bet Amount"
          }
        },
        "type": "object",
        "required": [
          "choice",
          "bet_amount"
        ],
        "title": "RPSPlayRequest",
        "description": "가위바위보 게임 요청 모델"
      },
      "RPSPlayResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "player_choice": {
            "type": "string",
            "title": "Player Choice"
          },
          "computer_choice": {
            "type": "string",
            "title": "Computer Choice"
          },
          "result": {
            "type": "string",
            "title": "Result"
          },
          "win_amount": {
            "type": "integer",
            "title": "Win Amount",
            "default": 0
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "streak": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streak"
          }
        },
        "type": "object",
        "required": [
          "success",
          "player_choice",
          "computer_choice",
          "result",
          "message",
          "balance"
        ],
        "title": "RPSPlayResponse",
        "description": "가위바위보 게임 응답 모델"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest",
        "description": "리프레시 토큰 요청"
      },
      "ResetRequest": {
        "properties": {
          "action_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Type"
          }
        },
        "type": "object",
        "title": "ResetRequest"
      },
      "RewardAuditItem": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "reward_type",
          "amount",
          "created_at"
        ],
        "title": "RewardAuditItem"
      },
      "RewardAuditResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RewardAuditItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "page_size"
        ],
        "title": "RewardAuditResponse"
      },
      "RewardCatalogCreate": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "code",
          "reward_type",
          "amount"
        ],
        "title": "RewardCatalogCreate"
      },
      "RewardCatalogItem": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "code",
          "reward_type",
          "amount",
          "id",
          "active",
          "created_at",
          "updated_at"
        ],
        "title": "RewardCatalogItem"
      },
      "RewardCatalogUpdate": {
        "properties": {
          "reward_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reward Type"
          },
          "amount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "title": "RewardCatalogUpdate"
      },
      "RewardDistributionRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "amount": {
            "type": "integer",
            "title": "Amount"
          },
          "source_description": {
            "type": "string",
            "title": "Source Description"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reward_type",
          "amount",
          "source_description"
        ],
        "title": "RewardDistributionRequest"
      },
      "RewardItem": {
        "properties": {
          "reward_id": {
            "type": "integer",
            "title": "Reward Id"
          },
          "reward_type": {
            "type": "string",
            "title": "Reward Type"
          },
          "reward_value": {
            "type": "string",
            "title": "Reward Value"
          },
          "awarded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Awarded At"
          }
        },
        "type": "object",
        "required": [
          "reward_id",
          "reward_type",
          "reward_value",
          "awarded_at"
        ],
        "title": "RewardItem"
      },
      "ShopProductCreate": {
        "properties": {
          "product_id": {
            "type": "string",
            "title": "Product Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "name",
          "price"
        ],
        "title": "ShopProductCreate"
      },
      "ShopProductOut": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "product_id": {
            "type": "string",
            "title": "Product Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "product_id",
          "name",
          "description",
          "price",
          "is_active"
        ],
        "title": "ShopProductOut"
      },
      "ShopProductUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "title": "ShopProductUpdate"
      },
      "ShopPurchaseRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          },
          "item_name": {
            "type": "string",
            "title": "Item Name"
          },
          "price": {
            "type": "integer",
            "title": "Price"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "item_id",
          "item_name",
          "price"
        ],
        "title": "ShopPurchaseRequest"
      },
      "ShopPurchaseResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "new_gold_balance": {
            "type": "integer",
            "title": "New Gold Balance"
          },
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          },
          "item_name": {
            "type": "string",
            "title": "Item Name"
          },
          "new_item_count": {
            "type": "integer",
            "title": "New Item Count"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "new_gold_balance",
          "item_id",
          "item_name",
          "new_item_count"
        ],
        "title": "ShopPurchaseResponse"
      },
      "SlotSpinRequest": {
        "properties": {
          "bet_amount": {
            "type": "integer",
            "title": "Bet Amount"
          },
          "lines": {
            "type": "integer",
            "title": "Lines",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "bet_amount"
        ],
        "title": "SlotSpinRequest",
        "description": "슬롯 머신 스핀 요청 모델"
      },
      "SlotSpinResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "reels": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Reels"
          },
          "win_amount": {
            "type": "integer",
            "title": "Win Amount",
            "default": 0
          },
          "win_lines": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Win Lines",
            "default": []
          },
          "multiplier": {
            "type": "number",
            "title": "Multiplier",
            "default": 1.0
          },
          "is_jackpot": {
            "type": "boolean",
            "title": "Is Jackpot",
            "default": false
          },
          "free_spins_awarded": {
            "type": "integer",
            "title": "Free Spins Awarded",
            "default": 0
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "balance": {
            "type": "integer",
            "title": "Balance"
          },
          "special_animation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Animation"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          },
          "net_change": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Net Change",
            "description": "순 변화량 (win_amount - bet_amount)"
          }
        },
        "type": "object",
        "required": [
          "success",
          "reels",
          "message",
          "balance"
        ],
        "title": "SlotSpinResponse",
        "description": "슬롯 머신 스핀 응답 모델"
      },
      "StreakClaimResponse": {
        "properties": {
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "streak_count": {
            "type": "integer",
            "title": "Streak Count"
          },
          "awarded_gold": {
            "type": "integer",
            "title": "Awarded Gold"
          },
          "awarded_xp": {
            "type": "integer",
            "title": "Awarded Xp"
          },
          "new_gold_balance": {
            "type": "integer",
            "title": "New Gold Balance"
          },
          "claimed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Claimed At"
          }
        },
        "type": "object",
        "required": [
          "action_type",
          "streak_count",
          "awarded_gold",
          "awarded_xp",
          "new_gold_balance",
          "claimed_at"
        ],
        "title": "StreakClaimResponse"
      },
      "StreakPreviewResponse": {
        "properties": {
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "streak_count": {
            "type": "integer",
            "title": "Streak Count"
          },
          "claimed_today": {
            "type": "boolean",
            "title": "Claimed Today"
          },
          "claimable": {
            "type": "boolean",
            "title": "Claimable"
          },
          "today_reward_gold": {
            "type": "integer",
            "title": "Today Reward Gold"
          },
          "today_reward_xp": {
            "type": "integer",
            "title": "Today Reward Xp"
          },
          "next_day_reward_gold": {
            "type": "integer",
            "title": "Next Day Reward Gold"
          },
          "next_day_reward_xp": {
            "type": "integer",
            "title": "Next Day Reward Xp"
          }
        },
        "type": "object",
        "required": [
          "action_type",
          "streak_count",
          "claimed_today",
          "claimable",
          "today_reward_gold",
          "today_reward_xp",
          "next_day_reward_gold",
          "next_day_reward_xp"
        ],
        "title": "StreakPreviewResponse"
      },
      "StreakStatus": {
        "properties": {
          "action_type": {
            "type": "string",
            "title": "Action Type"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          }
        },
        "type": "object",
        "required": [
          "action_type",
          "count"
        ],
        "title": "StreakStatus"
      },
      "TickRequest": {
        "properties": {
          "action_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Type"
          }
        },
        "type": "object",
        "title": "TickRequest"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/app__schemas__auth__UserResponse"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "Token",
        "description": "토큰 응답 스키마"
      },
      "UpdateUserRankRequest": {
        "properties": {
          "user_rank": {
            "type": "string",
            "title": "User Rank",
            "description": "STANDARD|VIP 등"
          }
        },
        "type": "object",
        "required": [
          "user_rank"
        ],
        "title": "UpdateUserRankRequest"
      },
      "UpdateUserStatusRequest": {
        "properties": {
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "is_active"
        ],
        "title": "UpdateUserStatusRequest"
      },
      "UserBanRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "reason"
        ],
        "title": "UserBanRequest",
        "description": "User ban request"
      },
      "UserCreate": {
        "properties": {
          "site_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Site Id",
            "description": "사이트 아이디"
          },
          "nickname": {
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "title": "Nickname",
            "description": "닉네임"
          },
          "phone_number": {
            "type": "string",
            "maxLength": 15,
            "minLength": 10,
            "title": "Phone Number",
            "description": "전화번호"
          },
          "invite_code": {
            "type": "string",
            "title": "Invite Code",
            "description": "초대코드 (5858)"
          },
          "password": {
            "type": "string",
            "minLength": 4,
            "title": "Password",
            "description": "비밀번호생성"
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "nickname",
          "phone_number",
          "invite_code",
          "password"
        ],
        "title": "UserCreate",
        "description": "사용자 생성 스키마 - 회원가입 필수 입력사항",
        "example": {
          "invite_code": "5858",
          "nickname": "테스터",
          "password": "1234",
          "phone_number": "01012345678",
          "site_id": "testuser123"
        }
      },
      "UserDetail": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "user_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Rank"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "cyber_token_balance": {
            "type": "integer",
            "title": "Cyber Token Balance"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "is_active",
          "is_admin",
          "created_at",
          "cyber_token_balance"
        ],
        "title": "UserDetail"
      },
      "UserGameActivity": {
        "properties": {
          "game_type": {
            "type": "string",
            "title": "Game Type"
          },
          "total_rounds": {
            "type": "integer",
            "title": "Total Rounds",
            "default": 0
          },
          "total_wins": {
            "type": "integer",
            "title": "Total Wins",
            "default": 0
          },
          "total_losses": {
            "type": "integer",
            "title": "Total Losses",
            "default": 0
          },
          "win_rate": {
            "type": "number",
            "title": "Win Rate",
            "default": 0.0
          },
          "favorite": {
            "type": "boolean",
            "title": "Favorite",
            "default": false
          },
          "last_played": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Played"
          }
        },
        "type": "object",
        "required": [
          "game_type"
        ],
        "title": "UserGameActivity",
        "description": "사용자 게임 활동 요약"
      },
      "UserLogin": {
        "properties": {
          "site_id": {
            "type": "string",
            "title": "Site Id",
            "description": "사이트 아이디"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "비밀번호"
          }
        },
        "type": "object",
        "required": [
          "site_id",
          "password"
        ],
        "title": "UserLogin",
        "description": "사용자 로그인 스키마",
        "example": {
          "password": "password123",
          "site_id": "testuser123"
        }
      },
      "UserMissionProgress": {
        "properties": {
          "mission_id": {
            "type": "integer",
            "title": "Mission Id"
          },
          "progress_increment": {
            "type": "integer",
            "title": "Progress Increment"
          }
        },
        "type": "object",
        "required": [
          "mission_id",
          "progress_increment"
        ],
        "title": "UserMissionProgress"
      },
      "UserMissionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "mission_id": {
            "type": "integer",
            "title": "Mission Id"
          },
          "current_progress": {
            "type": "integer",
            "title": "Current Progress"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed"
          },
          "claimed": {
            "type": "boolean",
            "title": "Claimed"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "claimed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Claimed At"
          },
          "reset_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reset At"
          },
          "mission": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MissionResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "mission_id",
          "current_progress",
          "completed",
          "claimed",
          "started_at"
        ],
        "title": "UserMissionResponse"
      },
      "UserProfileResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "cyber_token_balance": {
            "type": "integer",
            "title": "Cyber Token Balance"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "phone_number",
          "cyber_token_balance",
          "is_admin",
          "is_active"
        ],
        "title": "UserProfileResponse",
        "description": "User profile response"
      },
      "UserStatsResponse": {
        "properties": {
          "total_games_played": {
            "type": "integer",
            "title": "Total Games Played"
          },
          "total_tokens_earned": {
            "type": "integer",
            "title": "Total Tokens Earned"
          },
          "total_tokens_spent": {
            "type": "integer",
            "title": "Total Tokens Spent"
          },
          "win_rate": {
            "type": "number",
            "title": "Win Rate"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "experience": {
            "type": "integer",
            "title": "Experience"
          },
          "last_30d_active_days": {
            "type": "integer",
            "title": "Last 30D Active Days"
          },
          "lifetime_active_days": {
            "type": "integer",
            "title": "Lifetime Active Days"
          }
        },
        "type": "object",
        "required": [
          "total_games_played",
          "total_tokens_earned",
          "total_tokens_spent",
          "win_rate",
          "level",
          "experience",
          "last_30d_active_days",
          "lifetime_active_days"
        ],
        "title": "UserStatsResponse",
        "description": "User statistics response\n\nNotes:\n- last_30d_active_days / lifetime_active_days are computed from UserAction distinct UTC dates.\n- Timezone: UTC 00:00 day boundary.\n- Activity scope: all actions recorded in UserAction."
      },
      "UserSummary": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "user_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Rank"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "is_active",
          "is_admin",
          "created_at"
        ],
        "title": "UserSummary"
      },
      "UserUpdate": {
        "properties": {
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidateInviteCodeRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "ValidateInviteCodeRequest"
      },
      "ValidateInviteCodeResponse": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "remaining_uses": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remaining Uses"
          }
        },
        "type": "object",
        "required": [
          "is_valid"
        ],
        "title": "ValidateInviteCodeResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VipClaimResponse": {
        "properties": {
          "awarded_points": {
            "type": "integer",
            "title": "Awarded Points"
          },
          "new_vip_points": {
            "type": "integer",
            "title": "New Vip Points"
          },
          "claimed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Claimed At"
          },
          "idempotent": {
            "type": "boolean",
            "title": "Idempotent"
          }
        },
        "type": "object",
        "required": [
          "awarded_points",
          "new_vip_points",
          "claimed_at",
          "idempotent"
        ],
        "title": "VipClaimResponse"
      },
      "VipStatusResponse": {
        "properties": {
          "claimed_today": {
            "type": "boolean",
            "title": "Claimed Today"
          },
          "vip_points": {
            "type": "integer",
            "title": "Vip Points"
          },
          "last_claim_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Claim At"
          }
        },
        "type": "object",
        "required": [
          "claimed_today",
          "vip_points"
        ],
        "title": "VipStatusResponse"
      },
      "_RegisterRequest": {
        "properties": {
          "invite_code": {
            "type": "string",
            "title": "Invite Code",
            "description": "Invite code"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname",
            "description": "Desired nickname"
          }
        },
        "type": "object",
        "required": [
          "invite_code",
          "nickname"
        ],
        "title": "_RegisterRequest"
      },
      "_RegisterResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "gold_balance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gold Balance"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "nickname",
          "access_token"
        ],
        "title": "_RegisterResponse"
      },
      "app__routers__admin_content__EventCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "title": "Start At"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "title": "End At"
          },
          "reward_scheme": {
            "type": "object",
            "title": "Reward Scheme"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_at",
          "end_at"
        ],
        "title": "EventCreate"
      },
      "app__routers__admin_content__EventResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "title": "Start At"
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "title": "End At"
          },
          "reward_scheme": {
            "type": "object",
            "title": "Reward Scheme"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_at",
          "end_at",
          "id",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "EventResponse"
      },
      "app__routers__admin_content__EventUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "start_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          },
          "end_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End At"
          },
          "reward_scheme": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reward Scheme"
          },
          "missions": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Missions"
          }
        },
        "type": "object",
        "title": "EventUpdate"
      },
      "app__schemas__auth__UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "gold_balance": {
            "type": "integer",
            "title": "Gold Balance",
            "default": 0
          },
          "vip_points": {
            "type": "integer",
            "title": "Vip Points",
            "default": 0
          },
          "battlepass_level": {
            "type": "integer",
            "title": "Battlepass Level",
            "default": 1
          },
          "experience": {
            "type": "integer",
            "title": "Experience",
            "default": 0
          },
          "experience_points": {
            "type": "integer",
            "title": "Experience Points",
            "default": 0
          },
          "level": {
            "type": "integer",
            "title": "Level",
            "default": 1
          },
          "max_experience": {
            "type": "integer",
            "title": "Max Experience",
            "default": 1000
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "phone_number",
          "is_active",
          "is_admin",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "사용자 응답 스키마"
      },
      "app__schemas__event_schemas__EventCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "title",
          "event_type",
          "start_date",
          "end_date",
          "rewards"
        ],
        "title": "EventCreate"
      },
      "app__schemas__event_schemas__EventResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "rewards": {
            "type": "object",
            "title": "Rewards"
          },
          "requirements": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requirements",
            "default": {}
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "participation_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participation Count",
            "default": 0
          },
          "user_participation": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Participation"
          }
        },
        "type": "object",
        "required": [
          "title",
          "event_type",
          "start_date",
          "end_date",
          "rewards",
          "id",
          "is_active",
          "created_at"
        ],
        "title": "EventResponse"
      },
      "app__schemas__event_schemas__EventUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "rewards": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "EventUpdate"
      },
      "app__schemas__user__UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "site_id": {
            "type": "string",
            "title": "Site Id"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "cyber_token_balance": {
            "type": "integer",
            "title": "Cyber Token Balance"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank",
            "default": "STANDARD"
          }
        },
        "type": "object",
        "required": [
          "id",
          "site_id",
          "nickname",
          "phone_number",
          "cyber_token_balance",
          "created_at",
          "is_active",
          "is_admin"
        ],
        "title": "UserResponse"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}